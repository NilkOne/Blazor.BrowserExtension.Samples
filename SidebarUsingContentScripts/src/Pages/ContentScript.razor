@page "/contentscript.html"
@inherits Blazor.BrowserExtension.Pages.BasePage
@inject IJSRuntime JS

<div class="sidebar-container @(isCollapsed ? "collapsed" : "")">
    <div class="content-container">
        <div class="toggle" @onclick=Toggle>
            Toggle
        </div>
        <div class="text-container">
            <h1>My Sidebar</h1>
            <p>Author is @_author</p>
            <p>This sidebar content is directly injected into the page.</p>
            <p>Alternatively, you can also use an iframe to embed another page as the sidebar content. This approach is better in isolating the styling of the sidebar from being affected by the page's CSS.</p>
        </div>
    </div>
</div>

@code {
    private bool isCollapsed = true;
    private string _author { get; set; }
    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./interop.js");

            if (module is not null) {
                string author = await module.InvokeAsync<string>("getAuthor");
                Console.WriteLine($"Author is {author}");
                _author = author;

                await module.InvokeVoidAsync("injectToTable", "Blazor is awesome!");
            }
        }
    }

    private void Toggle()
    {
        isCollapsed = !isCollapsed;
    }
} 
